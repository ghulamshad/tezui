import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{S as g}from"./Select-BkyWZahC.js";import{M as p}from"./MenuItem-DRInJoO_.js";import"./index-D4lIrffr.js";import"./generateUtilityClass-X8vU33Qn.js";import"./createTheme-BUel03A0.js";import"./index-BtzQAOoK.js";import"./styled-BAZlGgKr.js";import"./DefaultPropsProvider-Dc-qTJVP.js";import"./generateUtilityClasses-CLSsTaNC.js";import"./useSlot-OTo4eg8k.js";import"./resolveComponentProps-BIm1hqfy.js";import"./useForkRef-zqhjcRVs.js";import"./useSlotProps-BLSNAJah.js";import"./Popover-Cd2J5t0z.js";import"./isHostComponent-DVu5iVWx.js";import"./ownerDocument-DW-IO8s5.js";import"./ownerWindow-HkKU3E4x.js";import"./debounce-Be36O1Ab.js";import"./Grow-BSgE3rb-.js";import"./useTheme-C-GcZBKo.js";import"./useTheme-2mBOAmpa.js";import"./utils-DoXAlJIm.js";import"./TransitionGroupContext-DwK6OGUB.js";import"./index-BQQLSK9g.js";import"./index-DsJinFGm.js";import"./useTimeout-D31e7RVr.js";import"./getReactElementRef-rGhWSfJO.js";import"./mergeSlotProps-ZBVUqZ1a.js";import"./Modal-DLIYOXvE.js";import"./memoTheme-DmLuDuZz.js";import"./useEventCallback-PUnHO-pX.js";import"./useEnhancedEffect-TzlApzCm.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Portal-Do1k1m4W.js";import"./Backdrop-SZrbmPZ2.js";import"./Paper-CQ4C9ANE.js";import"./List-KaPn0lEX.js";import"./ListContext-Bx4YLmZN.js";import"./useControlled-YcRSxK3u.js";import"./useId-BpZO_0ZV.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-Djn6XZQb.js";import"./createSvgIcon-0TVLy6aX.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./index-DRowGhIs.js";import"./extendSxProp-7_TwaG2S.js";import"./emotion-react.browser.esm-BebTSLZi.js";import"./ButtonBase-DgyPxojw.js";import"./isFocusVisible-B8k4qzLc.js";import"./listItemIconClasses-Cpw5eRZ2.js";import"./listItemTextClasses-Bn6yugeZ.js";import"./dividerClasses-CtNsbonI.js";const i=({value:t,onChange:l,children:d,...v})=>e.jsx(g,{value:t,onChange:l,...v,children:d});i.__docgenInfo={description:"",methods:[],displayName:"Select",props:{value:{required:!0,tsType:{name:"string"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(event: React.ChangeEvent<{ value: unknown }>) => void",signature:{arguments:[{type:{name:"ReactChangeEvent",raw:"React.ChangeEvent<{ value: unknown }>",elements:[{name:"signature",type:"object",raw:"{ value: unknown }",signature:{properties:[{key:"value",value:{name:"unknown",required:!0}}]}}]},name:"event"}],return:{name:"void"}}},description:""}},composes:["MUISelectProps"]};const xe={title:"Components/Select",component:i,argTypes:{value:{control:"text"}}},S=t=>e.jsxs(i,{...t,children:[e.jsx(p,{value:"option1",children:"Option 1"}),e.jsx(p,{value:"option2",children:"Option 2"}),e.jsx(p,{value:"option3",children:"Option 3"})]}),r=S.bind({});r.args={value:"option1"};const x=t=>e.jsx(i,{...t,children:"Select Content"}),o=x.bind({});o.args={};var n,m,a;r.parameters={...r.parameters,docs:{...(n=r.parameters)==null?void 0:n.docs,source:{originalSource:`args => <Select {...args}>\r
    <MenuItem value="option1">Option 1</MenuItem>\r
    <MenuItem value="option2">Option 2</MenuItem>\r
    <MenuItem value="option3">Option 3</MenuItem>\r
  </Select>`,...(a=(m=r.parameters)==null?void 0:m.docs)==null?void 0:a.source}}};var s,u,c;o.parameters={...o.parameters,docs:{...(s=o.parameters)==null?void 0:s.docs,source:{originalSource:"args => <Select {...args}>Select Content</Select>",...(c=(u=o.parameters)==null?void 0:u.docs)==null?void 0:c.source}}};const fe=["Default","Default2"];export{r as Default,o as Default2,fe as __namedExportsOrder,xe as default};
