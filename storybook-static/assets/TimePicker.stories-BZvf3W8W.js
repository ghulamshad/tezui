import{j as o}from"./jsx-runtime-D_zvdyIk.js";import{r as d,R as T}from"./index-D4lIrffr.js";import{T as c}from"./TextField-CBIz1Wvv.js";import"./generateUtilityClass-DS88KkuX.js";import"./createTheme-BUel03A0.js";import"./generateUtilityClasses-SuX1FHQL.js";import"./useSlot-XhhkRC7z.js";import"./resolveComponentProps-DWW8AAsu.js";import"./useForkRef-zqhjcRVs.js";import"./DefaultPropsProvider-Dc-qTJVP.js";import"./useId-BpZO_0ZV.js";import"./styled-eFMiCpP8.js";import"./Select-C-h1uQh3.js";import"./index-BtzQAOoK.js";import"./useSlotProps-C7sNYW7r.js";import"./Popover-BaHYzKdi.js";import"./isHostComponent-DVu5iVWx.js";import"./ownerDocument-DW-IO8s5.js";import"./ownerWindow-HkKU3E4x.js";import"./debounce-Be36O1Ab.js";import"./Grow-BSgE3rb-.js";import"./useTheme-C-GcZBKo.js";import"./useTheme-2mBOAmpa.js";import"./utils-DoXAlJIm.js";import"./TransitionGroupContext-DwK6OGUB.js";import"./index-BQQLSK9g.js";import"./index-DsJinFGm.js";import"./useTimeout-D31e7RVr.js";import"./getReactElementRef-rGhWSfJO.js";import"./mergeSlotProps-f2fK3llI.js";import"./Modal-CZ3hwo5I.js";import"./memoTheme-BWTO_cHI.js";import"./useEventCallback-PUnHO-pX.js";import"./useEnhancedEffect-TzlApzCm.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Portal-Do1k1m4W.js";import"./Backdrop-B7_A0OEp.js";import"./Paper-DgZR1Cuu.js";import"./List-CTUpncCa.js";import"./ListContext-Bx4YLmZN.js";import"./useControlled-YcRSxK3u.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-Djn6XZQb.js";import"./createSvgIcon-DKsP6-LC.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./index-DRowGhIs.js";import"./extendSxProp-7_TwaG2S.js";import"./emotion-react.browser.esm-BebTSLZi.js";import"./FormLabel-D0WW-SVb.js";import"./isMuiElement-B6DUnSYx.js";let p=!1;const g=()=>{p||(console.warn(["MUI: The TimePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.","","You should use `import { TimePicker } from '@mui/x-date-pickers'`","or `import { TimePicker } from '@mui/x-date-pickers/TimePicker'`","","More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/."].join(`
`)),p=!0)},f=d.forwardRef(function(){return g(),null}),a=({label:e,value:i,onChange:m,...n})=>o.jsx(f,{label:e,value:i,onChange:m,renderInput:t=>o.jsx(c,{...t}),...n});a.__docgenInfo={description:"",methods:[],displayName:"TimePicker",props:{label:{required:!0,tsType:{name:"string"},description:""},value:{required:!0,tsType:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(date: Date | null) => void",signature:{arguments:[{type:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},name:"date"}],return:{name:"void"}}},description:""}},composes:["Omit"]};const Te={title:"Components/TimePicker",component:a,argTypes:{label:{control:"text"},value:{control:"date"}}},x=e=>{const[i,m]=T.useState(e.value),n=t=>{m(t)};return o.jsx(a,{...e,value:i,onChange:n,renderInput:t=>o.jsx(c,{...t})})},r=x.bind({});r.args={label:"Select Time",value:new Date};var s,u,l;r.parameters={...r.parameters,docs:{...(s=r.parameters)==null?void 0:s.docs,source:{originalSource:`args => {
  const [value, setValue] = React.useState<Date | null>(args.value);
  const handleChange = (newValue: Date | null) => {
    setValue(newValue);
  };
  return <TimePicker {...args} value={value} onChange={handleChange} renderInput={params => <TextField {...params} />} />;
}`,...(l=(u=r.parameters)==null?void 0:u.docs)==null?void 0:l.source}}};const ge=["Default"];export{r as Default,ge as __namedExportsOrder,Te as default};
