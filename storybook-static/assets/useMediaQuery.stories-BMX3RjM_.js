import{j as E}from"./jsx-runtime-D_zvdyIk.js";import{u as Q}from"./useTheme-C-GcZBKo.js";import{T as x}from"./createTheme-BUel03A0.js";import{r as d,a as T}from"./index-D4lIrffr.js";import{a as M}from"./useTheme-2mBOAmpa.js";import{g as S}from"./getThemeProps-CEs1q9E5.js";import{u as b}from"./useEnhancedEffect-TzlApzCm.js";import{T as L}from"./Typography-Cnj03nQk.js";import"./DefaultPropsProvider-Dc-qTJVP.js";import"./Typography-CErKNqkp.js";import"./generateUtilityClass-DS88KkuX.js";import"./index-DRowGhIs.js";import"./extendSxProp-7_TwaG2S.js";import"./emotion-react.browser.esm-BebTSLZi.js";import"./memoTheme-BWTO_cHI.js";import"./styled-eFMiCpP8.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./generateUtilityClasses-SuX1FHQL.js";function _(e,s,t,n,u){const[r,c]=d.useState(()=>u&&t?t(e).matches:n?n(e).matches:s);return b(()=>{if(!t)return;const o=t(e),a=()=>{c(o.matches)};return a(),o.addEventListener("change",a),()=>{o.removeEventListener("change",a)}},[e,t]),r}const D={...T},g=D.useSyncExternalStore;function R(e,s,t,n,u){const r=d.useCallback(()=>s,[s]),c=d.useMemo(()=>{if(u&&t)return()=>t(e).matches;if(n!==null){const{matches:i}=n(e);return()=>i}return r},[r,e,n,u,t]),[o,a]=d.useMemo(()=>{if(t===null)return[r,()=>()=>{}];const i=t(e);return[()=>i.matches,m=>(i.addEventListener("change",m),()=>{i.removeEventListener("change",m)})]},[r,t,e]);return g(a,o,c)}function v(e={}){const{themeId:s}=e;return function(n,u={}){let r=M();r&&s&&(r=r[s]||r);const c=typeof window<"u"&&typeof window.matchMedia<"u",{defaultMatches:o=!1,matchMedia:a=c?window.matchMedia:null,ssrMatchMedia:l=null,noSsr:i=!1}=S({name:"MuiUseMediaQuery",props:u,theme:r});let m=typeof n=="function"?n(r):n;return m=m.replace(/^@media( ?)/m,""),(g!==void 0?R:_)(m,o,a,l,i)}}v();const $=v({themeId:x}),w=e=>{const s=Q();return $(s.breakpoints.up(e))},q={title:"Components/useMediaQuery",component:w},j=e=>{const s=w("(min-width:600px)");return E.jsx(L,{variant:"body1",children:`The viewport is ${s?"at least":"less than"} 600 pixels wide.`})},p=j.bind({});p.args={};var h,f,y;p.parameters={...p.parameters,docs:{...(h=p.parameters)==null?void 0:h.docs,source:{originalSource:`args => {
  const matches = useMediaQuery('(min-width:600px)');
  return <Typography variant="body1">\r
      {\`The viewport is \${matches ? 'at least' : 'less than'} 600 pixels wide.\`}\r
    </Typography>;
}`,...(y=(f=p.parameters)==null?void 0:f.docs)==null?void 0:y.source}}};const ee=["Default"];export{p as Default,ee as __namedExportsOrder,q as default};
